/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package DND;

import static org.junit.jupiter.api.Assertions.*;

import java.util.Hashtable;
import java.util.Vector;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import DND.Storeable.StoreableType;

class AppTest {

    @Test
    @DisplayName("Pdf Parsing")
    void pdf() {
        PdfParse.setFilepath("C:/Users/thoma/Documents/School/D&D 5e - Players Handbook.pdf");
        assertNotEquals(null, PdfParse.getSpellPages(2));
    }

    @Test
    @DisplayName("Basic roll test")
    public void basicRoll() {
        Roll rollDice = new Roll(1);
        int roll = rollDice.roll("1d6");
        System.out.println(roll);
        assertEquals(4, roll);
    }

    @Test
    @DisplayName("Multi-Die test")
    public void complexRoll() {
        Roll dice = new Roll(1);
        int roll = dice.roll("5d8");
        assertEquals(17, roll);
    }

    @Test
    @DisplayName("Modifier roll test")
    public void modRoll() {
        Roll dice = new Roll(1);
        int roll = dice.roll("1d6+4");
        assertEquals(8, roll);
    }

    @Test
    @DisplayName("Class Serializer Test")
    public void serialize() throws Exception {
        Feature feature = new Feature("Test Feature", "This is a test");
        Feature[] features = { feature };
        Hashtable<Stat, Profs> saves = new Hashtable<Stat, Profs>();
        saves.put(Stat.CONSTITUTION, Profs.PROFICIENT);
        Storage.initializeFileSystem();
        Skill[] skills = { Skill.ACROBATICS, Skill.STEALTH };
        Vector<String> profs = new Vector<String>();
        profs.add("Cabbages");
        DNDClass testClass = new DNDClass("test", features, "1D4", saves, 0, skills, 0, false, false, Stat.CONSTITUTION,
                profs);
        Storage.store(testClass, true);
        System.out.println(testClass.name);
        System.out.println(feature.getName());
        System.out.println(feature.getDescription());
    }

    @Test
    @DisplayName("Class Deserializer Test")
    public void deserialize() throws Exception {
        Storage.initializeFileSystem();
        DNDClass classTest;
        classTest = (DNDClass) Storage.retrieve("test", StoreableType.DNDCLASS);
        System.out.println(classTest.name);
        System.out.println(classTest.getMainStat());
        System.out.println(classTest.storeType);
        Feature[] features = classTest.getFeatures();
        for (Feature feature : features) {
            System.out.printf("\n%s\n%s", feature.getName(), feature.getDescription());
        }
    }
}
